document.addEventListener('DOMContentLoaded', () => {
    // üö®üö®üö® –£–ë–ï–î–ò–¢–ï–°–¨, –ß–¢–û –ó–î–ï–°–¨ –í–ê–® –ü–†–ê–í–ò–õ–¨–ù–´–ô URL –û–¢ CLOUDFLARE üö®üö®üö®
    const WORKER_URL = 'https://crm-facebook.brelok2023.workers.dev';

    // --- –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
    const form = document.getElementById('crmOrderForm');
    const productList = document.getElementById('productList');
    const sendButton = document.getElementById('sendOrderBtn');
    const statusMessage = document.getElementById('statusMessage');
    const totalSummaryEl = document.getElementById('totalSummary');
    const extraChargeInput = document.getElementById('extraCharge');
    const orderCommentInput = document.getElementById('orderComment');
    const paymentOptions = document.querySelector('.radio-group');
    const customPrepaymentInput = document.getElementById('customPrepaymentAmount');
    const customPrepaymentRadio = document.getElementById('payment-custom');

    if (!totalSummaryEl) {
        alert("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –≠–ª–µ–º–µ–Ω—Ç —Å id 'totalSummary' –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    // --- –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –ò –ü–†–ê–í–ò–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –¢–û–í–ê–†–û–í ---
    const PRODUCT_MAP = {
        'p_A': { name: '–§–ù', is_main: true },
        'p_B': { name: '–ù–ù', is_main: true },
        'p_C': { name: '–ù', is_main: true },
        'p_D': { name: '–§–§', is_main: true },
        'p_E': { name: '–û–±—å–µ–¥', is_main: true },
        'p_F': { name: '–õ–∞–Ω—Ü1', is_main: false },
        'p_G': { name: '–õ–∞–Ω—Ü2', is_main: false },
        'p_H': { name: '–õ–∞–Ω—Ü3', is_main: false },
        'p_I': { name: '–ë–∞–º–ø–µ—Ä', is_main: false },
        'p_J': { name: '–ö–∞—Ä—Ç–æ–Ω', is_main: false },
        'p_K': { name: '–ü–ª–∞—Å—Ç–∏–∫', is_main: false },
        'p_L': { name: '–ë—Ä–µ–ª–æ–∫0', is_main: false },
    };

    // --- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º ---
    function setupEventListeners() {
        productList.addEventListener('click', handleProductInteraction);
        productList.addEventListener('change', handleProductInteraction);
        extraChargeInput.addEventListener('input', updateTotalSummary);
        paymentOptions.addEventListener('change', (e) => {
            if (e.target.name === 'paymentMethod') {
                if (customPrepaymentRadio.checked) {
                    customPrepaymentInput.disabled = false;
                    customPrepaymentInput.focus();
                } else {
                    customPrepaymentInput.disabled = true;
                    customPrepaymentInput.value = '';
                }
            }
        });
    }

    function handleProductInteraction(e) {
        const item = e.target.closest('.product-item');
        if (!item) return;
        const checkbox = item.querySelector('.product-checkbox');
        if (e.type === 'click' && !e.target.closest('.quantity-select')) {
            checkbox.checked = !checkbox.checked;
        }
        updateItemState(item);
        updateTotalSummary();
    }

    function updateItemState(item) {
        const checkbox = item.querySelector('.product-checkbox');
        const select = item.querySelector('.quantity-select');
        if (checkbox.checked) {
            item.classList.add('selected');
            select.disabled = false;
        } else {
            item.classList.remove('selected');
            select.disabled = true;
            select.value = '1';
        }
    }

    function updateTotalSummary() {
        let total = 0;
        let hasItems = false;
        document.querySelectorAll('.product-item.selected').forEach(item => {
            total += (parseFloat(item.dataset.price) * parseInt(item.querySelector('.quantity-select').value));
            hasItems = true;
        });
        total += parseFloat(extraChargeInput.value) || 0;
        totalSummaryEl.textContent = `–ó–∞–≥–∞–ª—å–Ω–∞ –°—É–º–∞: ${total.toFixed(2)} –≥—Ä–Ω`;
        sendButton.disabled = !hasItems;
    }

    // --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã ---
    async function submitForm(e) {
        e.preventDefault();
        sendButton.disabled = true;
        sendButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –í—ñ–¥–ø—Ä–∞–≤–∫–∞...';
        statusMessage.textContent = '';

        const clientFacebook = document.getElementById('clientFacebook').value.trim();
        const isUrgent = document.getElementById('isUrgent').checked;
        const mainItems = [], extraItems = [];
        
        document.querySelectorAll('.product-item.selected').forEach(item => {
            const info = PRODUCT_MAP[item.dataset.id];
            const qty = parseInt(item.querySelector('.quantity-select').value);
            const arr = Array(qty).fill(info.name);
            if (info.is_main) mainItems.push(...arr);
            else extraItems.push(...arr);
        });

        const paymentMethodRadio = form.querySelector('input[name="paymentMethod"]:checked');
        if (!clientFacebook || !paymentMethodRadio) {
            showError('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –ù—ñ–∫ —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏.');
            return;
        }

        let prepaymentAmount = 0;
        const totalAmount = parseFloat(totalSummaryEl.textContent.match(/[\d\.]+/)[0]);
        if (paymentMethodRadio.id === 'payment-prepay') prepaymentAmount = 150;
        else if (paymentMethodRadio.id === 'payment-full') prepaymentAmount = totalAmount;
        else if (paymentMethodRadio.id === 'payment-custom') prepaymentAmount = parseFloat(customPrepaymentInput.value) || 0;

        const payload = {
            –ù–∏–∫: clientFacebook,
            isUrgent: isUrgent,
            –ó–∞–∫–∞–∑_–∂–µ—Ç–æ–Ω: mainItems.join('+') || '-',
            –î–æ–ø_—Ç–æ–≤–∞—Ä—ã: extraItems.join('+') || '-',
            –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: prepaymentAmount,
            extraCharge: parseFloat(extraChargeInput.value) || 0,
            comment: orderCommentInput.value.trim()
        };

        try {
            const response = await fetch(WORKER_URL, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            const result = await response.json();
            if (result.status === 'success') {
                showSuccess(`‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ! –†—è–¥–æ–∫: ${result.row_added}`);
                form.reset();
                document.querySelectorAll('.product-item').forEach(item => updateItemState(item));
                updateTotalSummary();
                customPrepaymentInput.disabled = true;
            } else {
                showError(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${result.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.'}`);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
            showError(`‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è: ${error.message}`);
        }
    }

    // --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π ---
    function showError(message) {
        statusMessage.textContent = message;
        statusMessage.style.color = 'red';
        sendButton.disabled = false;
        sendButton.innerHTML = '<i class="fas fa-paper-plane"></i> –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è';
    }

    function showSuccess(message) {
        statusMessage.textContent = message;
        statusMessage.style.color = '#007bff';
        sendButton.disabled = false;
        sendButton.innerHTML = '<i class="fas fa-paper-plane"></i> –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è';
        setTimeout(() => statusMessage.textContent = '', 7000);
    }

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
    form.addEventListener('submit', submitForm);
    setupEventListeners();
    updateTotalSummary();
});
